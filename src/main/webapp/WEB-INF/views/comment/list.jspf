<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<%-- Comments --%>
<div class="card">
    <div class="card-header">
        <%-- comments.size에 따른 분기처리로 표기 --%>
        <c:choose>
            <c:when test="${not empty comments}">
                <c:set var="commentsSize" value="${fn:length(comments)}" />
                전체 댓글 : ${commentsSize}개
            </c:when>
            <c:otherwise>
                전체 댓글 : 0개
            </c:otherwise>
        </c:choose>
    </div>
    <%-- 댓글내용 부분 --%>
    <ul class="list-group-flush">
        <%-- comments가 있을 경우 --%>
        <c:if test="${not empty comments}">
            <c:forEach items="${comments}" var="comment">
                <li id="comments-${comment.id}" class="list-group-item">
                    <span>
                        <span style="font-size: small">${comment.nickname}</span>
                        <span style="font-size: xx-small">${comment.createdDate}</span>
                    </span>
                    <%-- 댓글 작성자와 로그인한 유저가 같을 경우에만 표시 --%>
                      <c:if test="${isWriter && comment.userId eq uidc}">
                        <%-- 댓글 수정 버튼 --%>
                        <button type="button" class="btn btn-link btn-sm" data-toggle="collapse" data-target=".multi-collapse-${comment.id}" aria-expanded="false" aria-controls="multi-collapse-${comment.id}">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"/>
                            </svg>
                        </button>
                        <%-- 댓글 삭제 버튼 --%>
                        <button type="button" class="btn btn-link btn-sm" onclick="main.commentDelete(${comment.postsId},${comment.id},${comment.userId},${uidc})">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/>
                            </svg>
                        </button>
                    </c:if>

                    <p>${comment.comment}</p>

                    <div class="collapse multi-collapse-${comment.id}" id="comments-${comment.id}">
                        <div class="card card-body">
                            <form>
                                <input type="hidden" id="id" value="${comment.id}">
                                <input type="hidden" id="postsId" value="${comment.postsId}">
                                <input type="hidden" id="writerUserId" value="${comment.userId}">
                                <input type="hidden" id="sessionUserId" value="${empty user ? '' : uidc}">
                                <div class="form-group">
                                    <textarea class="form-control" id="comment-content" rows="3">${comment.comment}</textarea>
                                </div>
                                <button type="button" id="btn-comment-update" class="btn btn-outline-primary">수정</button>
                            </form>
                        </div>
                    </div>
                </li>
            </c:forEach>
        </c:if>
    </ul>
</div>


<script>
    const main = {
        init: function() {
            const _this = this;

            // 댓글 저장
            $('#btn-comment-save').on('click', function() {
                _this.commentSave();
            });
            // 댓글 수정
            $(document).on('click', '#btn-comment-update', function() {
                const form = $(this).closest('form');
                _this.commentUpdate(form[0]);
            });
        },

        /** 댓글 저장 */
        commentSave: function() {
            const data = {
                postsId: $('#postsId').val(),
                comment: $('#comment').val()
            }

            // 공백 및 빈 문자열 체크
            if (!data.comment || data.comment.trim() === "") {
                swal({
                    title: "경고",
                    text: "공백 또는 입력하지 않은 부분이 있습니다.",
                    icon: "warning"
                });
                return false;
            } else {
                $.ajax({
                    type: 'POST',
                    url: '/api/posts/' + data.postsId + '/comments',
                    dataType: 'JSON',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data)
                }).done(function() {
                    swal({
                        title: "성공",
                        text: "댓글이 등록되었습니다.",
                        icon: "success"
                    });
                    setTimeout(function() {
                        window.location.reload();
                    }, 1000);
                }).fail(function(error) {
                    swal({
                        title: "오류",
                        text: JSON.stringify(error),
                        icon: "error"
                    });
                });
            }
        },
        /** 댓글 수정 */
        commentUpdate: function(form) {
            const data = {
                id: form.querySelector('#id').value,
                postsId: form.querySelector('#postsId').value,
                comment: form.querySelector('#comment-content').value,
                writerUserId: form.querySelector('#writerUserId').value,
                sessionUserId: form.querySelector('#sessionUserId').value
            }

            if (data.writerUserId !== data.sessionUserId) {
                swal({
                    title: "경고",
                    text: "본인이 작성한 댓글만 수정 가능합니다.",
                    icon: "warning"
                });
                return false;
            }

            if (!data.comment || data.comment.trim() === "") {
                swal({
                    title: "경고",
                    text: "공백 또는 입력하지 않은 부분이 있습니다.",
                    icon: "warning"
                });
                return false;
            }

            swal({
                title: "수정하시겠습니까?",
                icon: "warning",
                buttons: {
                    confirm: "확인",
                    cancel: "취소"
                }
            }).then(function(value) {
                if (value) {
                    $.ajax({
                        type: 'PUT',
                        url: '/api/posts/' + data.postsId + '/comments/' + data.id,
                        dataType: 'JSON',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(data)
                    }).done(function() {
                        swal({
                            title: "성공",
                            text: "수정되었습니다.",
                            icon: "success"
                        });
                        setTimeout(function() {
                            window.location.reload();
                        }, 1000);
                    }).fail(function(error) {
                        swal({
                            title: "오류",
                            text: JSON.stringify(error),
                            icon: "error"
                        });
                    });
                }
            });
        },

        /** 댓글 삭제 */
        commentDelete: function(postsId, commentId, commentWriterId, sessionUserId) {

            // 본인이 작성한 글인지 확인
            if (commentWriterId !== sessionUserId) {
                swal({
                    title: "경고",
                    text: "본인이 작성한 댓글만 삭제 가능합니다.",
                    icon: "warning"
                });
            } else {
                swal({
                    title: "삭제하시겠습니까?",
                    icon: "warning",
                    buttons: {
                        confirm: "확인",
                        cancel: "취소"
                    }
                }).then(function(value) {
                    if (value) {
                        $.ajax({
                            type: 'DELETE',
                            url: '/api/posts/' + postsId + '/comments/' + commentId,
                            dataType: 'JSON',
                            contentType: 'application/json; charset=utf-8'
                        }).done(function() {
                            swal({
                                title: "성공",
                                text: "삭제되었습니다.",
                                icon: "success"
                            });
                            setTimeout(function() {
                                window.location.reload();
                            }, 1000);
                        }).fail(function(error) {
                            swal({
                                title: "오류",
                                text: JSON.stringify(error),
                                icon: "error"
                            });
                        });
                    }
                });
            }
        }
    }

    $(document).ready(function() {
        main.init();
    });
</script>